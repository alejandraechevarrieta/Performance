@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //var perfil = "128";
    var perfil = Request.QueryString["perfil"];
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <!-- Estilos de Bootstrap -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0/css/bootstrap.min.css">

    <!-- Estilos de DataTables -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.12.1/css/dataTables.bootstrap5.min.css">

    <!-- JavaScript de jQuery (necesario para DataTables) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <!-- JavaScript de DataTables -->
    <script src="https://cdn.datatables.net/1.12.0/js/jquery.dataTables.min.js"></script>

    <!-- JavaScript de DataTables para Bootstrap -->
    <script src="https://cdn.datatables.net/1.12.1/js/dataTables.bootstrap5.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        html {
            height: 100%;
        }

        /*Background color*/
        #grad1 {
            background-color: #f3f3f3;
        }

        /*form styles*/
        #msform {
            text-align: center;
            position: relative;
            margin-top: 20px;
        }

            #msform fieldset .form-card {
                background: white;
                border: 0 none;
                border-radius: 0px;
                box-shadow: 0 2px 2px 2px rgba(0, 0, 0, 0.2);
                padding: 20px 40px 30px 40px;
                box-sizing: border-box;
                width: 94%;
                margin: 0 3% 20px 3%;
                /*stacking fieldsets above each other*/
                position: relative;
            }

            #msform fieldset {
                background: white;
                border: 0 none;
                border-radius: 0.5rem;
                box-sizing: border-box;
                width: 100%;
                margin: 0;
                padding-bottom: 20px;
                /*stacking fieldsets above each other*/
                position: relative;
            }

                /*Hide all except first fieldset*/
                #msform fieldset:not(:first-of-type) {
                    display: none;
                }

                #msform fieldset .form-card {
                    text-align: left;
                    color: #9E9E9E;
                }

            #msform input, #msform textarea {
                padding: 0px 8px 4px 8px;
                border: none;
                border-bottom: 1px solid #ccc;
                border-radius: 0px;
                margin-bottom: 25px;
                margin-top: 2px;
                width: 100%;
                box-sizing: border-box;
                font-family: 'Arial', sans-serif;
                color: #2C3E50;
                font-size: 16px;
                letter-spacing: 1px;
            }

                #msform input:focus, #msform textarea:focus {
                    -moz-box-shadow: none !important;
                    -webkit-box-shadow: none !important;
                    box-shadow: none !important;
                    border: none;
                    font-weight: bold;
                    border-bottom: 2px solid skyblue;
                    outline-width: 0;
                }

            /*Blue Buttons*/
            #msform .action-button {
                width: 100px;
                background: #00aec7;
                font-weight: bold;
                color: white;
                border: 0 none;
                border-radius: 0px;
                cursor: pointer;
                padding: 10px 5px;
                margin: 10px 5px;
            }

                #msform .action-button:hover, #msform .action-button:focus {
                    box-shadow: 0 0 0 2px white, 0 0 0 3px skyblue;
                }

            /*Previous Buttons*/
            #msform .action-button-previous {
                width: 100px;
                background: #616161;
                font-weight: bold;
                color: white;
                border: 0 none;
                border-radius: 0px;
                cursor: pointer;
                padding: 10px 5px;
                margin: 10px 5px;
            }

                #msform .action-button-previous:hover, #msform .action-button-previous:focus {
                    box-shadow: 0 0 0 2px white, 0 0 0 3px #616161;
                }

        /*Dropdown List Exp Date*/
        select.list-dt {
            border: none;
            outline: 0;
            border-bottom: 1px solid #ccc;
            padding: 2px 5px 3px 5px;
            margin: 2px;
        }

            select.list-dt:focus {
                border-bottom: 2px solid skyblue;
            }

        /*The background card*/
        .card {
            z-index: 0;
            border: none;
            border-radius: 0.5rem;
            position: relative;
        }

        /*FieldSet headings*/
        .fs-title {
            font-size: 25px;
            color: #2C3E50;
            margin-bottom: 10px;
            font-weight: bold;
            text-align: left;
        }

        /*progressbar*/
        #progressbar {
            margin-bottom: 30px;
            overflow: hidden;
            color: lightgrey;
            display: flex; /* Cambia el comportamiento del contenedor a flex */
        }

            #progressbar .active {
                color: #000000;
            }

            #progressbar li {
                list-style-type: none;
                font-size: 12px;
                width: auto; /* Cambia el ancho a automático para que los elementos se ajusten automáticamente */
                flex: 1; /* Ajusta el ancho de cada elemento automáticamente */
                position: relative;
                text-align: center; /* Centra el contenido */
            }

            /*Icons in the ProgressBar*/
            #progressbar #descripcion:before {
                font-family: FontAwesome;
                content: "\f2b5";
            }

            #progressbar #account:before {
                font-family: FontAwesome;
                content: "\f0eb";
            }

            #progressbar #personal:before {
                font-family: FontAwesome;
                content: "\f6de";
            }

            #progressbar #payment:before {
                font-family: FontAwesome;
                content: "\f102";
            }

            #progressbar #interpersonal:before {
                font-family: FontAwesome;
                content: "\f007";
            }

            #progressbar #cambio:before {
                font-family: FontAwesome;
                content: "\f362";
            }

            #progressbar #confirm:before {
                font-family: FontAwesome;
                content: "\f06e";
            }

            /*ProgressBar before any progress*/
            #progressbar li:before {
                width: 50px;
                height: 50px;
                line-height: 45px;
                display: block;
                font-size: 18px;
                color: #ffffff;
                background: lightgray;
                border-radius: 50%;
                margin: 0 auto 10px auto;
                padding: 2px;
            }

            /*ProgressBar connectors*/
            #progressbar li:after {
                content: '';
                width: 100%;
                height: 2px;
                background: lightgray;
                position: absolute;
                left: 0;
                top: 25px;
                z-index: -1;
            }

            /*Color number of the step and the connector before it*/
            #progressbar li.active:before, #progressbar li.active:after {
                background: #00aec7;
            }

        /*Imaged Radio Buttons*/
        .radio-group {
            position: relative;
            margin-bottom: 25px;
        }

        .radio {
            display: inline-block;
            width: 204px;
            height: 104px;
            border-radius: 0;
            background: lightblue;
            box-shadow: 0 2px 2px 2px rgba(0, 0, 0, 0.2);
            box-sizing: border-box;
            cursor: pointer;
            margin: 8px 2px;
        }

            .radio:hover {
                box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);
            }

            .radio.selected {
                box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.1);
            }

        /*Fit image in bootstrap div*/
        .fit-image {
            width: 100%;
            object-fit: cover;
        }

        .form-card {
            display: inline-block; /* Mostrar los botones en línea */
        }

            /* Ajuste para el último botón dentro de .form-card */
            .form-card input[type="button"]:last-child {
                margin-right: 0; /* Elimina el margen derecho del último botón */
            }

        /* Estilos para los botones dentro de .form-card */
        .form-card {
            display: flex; /* Usar flexbox para alinear los elementos */
            justify-content: space-between; /* Espacio uniforme entre los elementos */
        }

            .form-card input[type="button"] {
                flex: 1; /* Los botones ocupan igualmente todo el espacio disponible */
                margin-right: 10px; /* Espacio entre los botones */
            }

                /* Ajuste para el último botón dentro de .form-card */
                .form-card input[type="button"]:last-child {
                    margin-right: 0; /* Elimina el margen derecho del último botón */
                }
        /* Estilos para los botones dentro de .form-card */
        .form-card {
            display: flex; /* Utilizar flexbox para alinear los elementos */
            flex-direction: column; /* Alinear elementos verticalmente */
        }

        .button-container {
            display: flex; /* Utilizar flexbox para alinear los botones */
            justify-content: space-between; /* Espaciar uniformemente los botones */
        }
    </style>


</head>
<body>

    <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg">
        <div class="row" style="margin: 30px; overflow:hidden; display: flex;" id="rowProvisorio">
            <a id="a" class="btn btn-primary" href="/PerformanceApp/Index/Crud?view=autoevaluacion" style="max-width: 18%;">Autoevaluación</a>
            <a id="b" class="btn btn-secondary" href="/PerformanceApp/Index/Crud?view=evaluacion" style="max-width: 18%; ">Evaluación</a>
            <a id="c" class="btn btn-warning" href="/PerformanceApp/Index/Crud?view=resumenAutoevaluacion" style="max-width: 18%; ">Resumen Autoevaluación</a>
        </div>

        @*FILTROS SOLICITUDES*@
        <div class="row" style="margin: 30px; overflow:hidden;" id="rowFiltro">
            @if (perfil == "127" || perfil == "128")
            {
                <div class="form-group2 col-md-2" id="filtroColaborador">
                    <label>Colaborador:</label>
                    <div></div>
                    <div style="font-weight: normal !important;">
                        <select class="form-control" id="selectColaborador"></select>
                    </div>
                </div>
            }
            @if (perfil == "129")
            {
                <div class="form-group2 col-md-2" id="filtroLider">
                    <label>Líder:</label>
                    <div></div>
                    <div style="font-weight: normal !important;">
                        <select class="form-control" id="selectLider"></select>
                    </div>
                </div>
            }
            <div class="form-group2 col-md-2" id="filtroEstado">
                <label>Estado:</label>
                <div></div>
                <select class="form-control" id="selectEstado">                
                </select>
            </div>
            <div class="form-group2 col-md-1" style="padding-top: 2%;" id="btnBuscarFiltro">
                <button id="btnFiltrar" type="button" class="btn btn-success" style="width: 120px; cursor: pointer;">
                    Buscar
                </button>
            </div>
        </div>

        <!-- MultiStep Form -->
        <div class="container-fluid py-4" id="grad1">
            <!-- TABLA COLABORADOR -->
            @if (perfil == "127")
            {
                <div class="row">
                    <div class="col-12">
                        <div class="card mb-4">
                            <div class="card-header pb-0">
                                <div class="text-uppercase text-xl-center  font-weight-bolder opacity-7">Performance Colaborador</div>
                            </div>
                            <div class="card-body px-0 pt-0 pb-2">
                                <div class="table-responsive p-0">
                                    <table class="table align-items-center mb-0" id="tablaColaborador">
                                        <thead>
                                            <tr>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Año</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Líder</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Autoevaluación</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Evaluación</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Calibración</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Estado</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Los datos de la tabla se agregarán aquí dinámicamente desde JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (perfil == "128")
            {
                <div class="row">
                    <div class="col-12">
                        <div class="card mb-4">
                            <div class="card-header pb-0">
                                <h6>Performance Líder</h6>
                            </div>
                            <div class="card-body px-0 pt-0 pb-2">
                                <div class="table-responsive p-0">
                                    <table class="table align-items-center mb-0" id="tablaLider">
                                        <thead>
                                            <tr>
                                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Año</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Colaborador</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Autoevaluación</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Evaluación</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Calibración</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Estado</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Los datos de la tabla se agregarán aquí dinámicamente desde JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (perfil == "129")
            {
                <div class="row">
                    <div class="col-12">
                        <div class="card mb-4">
                            <div class="card-header pb-0">
                                <h6>Performance RRHH</h6>
                            </div>
                            <div class="card-body px-0 pt-0 pb-2">
                                <div class="table-responsive p-0">
                                    <table class="table align-items-center mb-0" id="tablaRRHH">
                                        <thead>
                                            <tr>
                                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Año</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Líder</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Autoevaluación</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Evaluación</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha de Calibración</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Estado</th>
                                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Los datos de la tabla se agregarán aquí dinámicamente desde JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </main>

    <!-- DataTables JS CDN -->
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

    <!-- JavaScript personalizado -->
    <script>
    var perfil = "@perfil";
    //Codigo para checkbox
    const checkboxes = document.querySelectorAll('.form-check-input');

    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('click', () => {
            checkboxes.forEach(otherCheckbox => {
                if (otherCheckbox !== checkbox) {
                    otherCheckbox.checked = false;
                }
            });
        });
    });

    $(document).ready(function () {

        var current_fs, next_fs, previous_fs; //fieldsets
        var opacity;

        $(".next").click(function () {

            current_fs = $(this).parent();
            next_fs = $(this).parent().next();

            //Add Class Active
            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

            //show the next fieldset
            next_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now) {
                    // for making fielset appear animation
                    opacity = 1 - now;

                    current_fs.css({
                        'display': 'none',
                        'position': 'relative'
                    });
                    next_fs.css({ 'opacity': opacity });
                },
                duration: 600
            });
        });

        $(".previous").click(function () {

            current_fs = $(this).parent();
            previous_fs = $(this).parent().prev();

            //Remove class active
            $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

            //show the previous fieldset
            previous_fs.show();

            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now) {
                    // for making fielset appear animation
                    opacity = 1 - now;

                    current_fs.css({
                        'display': 'none',
                        'position': 'relative'
                    });
                    previous_fs.css({ 'opacity': opacity });
                },
                duration: 600
            });
        });

        $('.radio-group .radio').click(function () {
            $(this).parent().find('.radio').removeClass('selected');
            $(this).addClass('selected');
        });

        $(".submit").click(function () {
            return false;
        })

    });

    //Funcion para que ande el popover
    $(document).ready(function () {
        $('[data-toggle="popover"]').popover();
    });
    //Active para navbar
    $(document).ready(function () {
        $('#navIndex').addClass('active');
    });
    //Funcion para que ande el tooltip
    //$(document).ready(function () {
    //    $('[data-toggle="tooltip"]').tooltip();
    //});


    ///LISTAR PERFORMANCE
        ListarPerformance();

        function ListarPerformance() {
            
            var colaborador = $("#selectColaborador").val();
            var estado = $("#selectEstado").val();
            var url = "Api/PerformanceApp/ListarPerformance";
            url = url + "?colaborador=" + colaborador;
            url = url + "&estado=" + estado;
            url = url + "&idPerfil=" + "@perfil";
            if ("@perfil" == "127") {//Tabla del colaborador
                IniciarTabla();
                $('#tablaColaborador').DataTable().clear().destroy();
                CargarTablaColaborador(url);
            }
            if ("@perfil" == "128") {//Tabla del lider
                IniciarTablaLider();
                $('#tablaColaborador').DataTable().clear().destroy();
                CargartablaLider(url);
            }
            if ("@perfil" == "129") {//Tabla del RRHH
                IniciarTablaRRHH();
                $('#tablaRRHH').DataTable().clear().destroy();
                CargartablaRRHH(url);
            }
        }

        //INICIAR TABLA DEL COLABORADOR
        function IniciarTabla() {
            var table = $('#tablaColaborador').DataTable();
            table.page('first').draw('page'); // Vuelve a la página 1 y actualiza la tabla
            table.clear().destroy();
        }
        function CargarTablaColaborador(url) {
            moment.locale('es');
            var table = $("#tablaColaborador").DataTable({
                "processing": true,
                "serverSide": true,
                "stateSave": true,
                "bDestroy": true,
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                },
                "ajax": {
                    "url": url,
                    "type": "POST",
                    "contentType": "application/json",
                    "data": function (d) {
                        return JSON.stringify(d);
                    },
                    "datatype": "json"
                },
                "pageLength": 25,
                "filter": true,
                "responsivePriority": 1,
                "columnDefs": [
                    { "width": "7%", "targets": 0 },
                    { "width": "20%", "targets": 1 },
                    { "width": "7%", "targets": 2 },
                    { "width": "7%", "targets": 3 },
                    { "width": "7%", "targets": 4 },
                    { "width": "10%", "targets": 5 },
                ],
                "columns": [
                    {
                        "data": "ano",
                        "name": "Año",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<div style="text-align: center;">' + data + '</div>'  
                        }
                    },
                    {
                        "data": "nombreJefe",
                        "name": "Lider",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {                           
                                return '<div style="text-align: center;">' + data + '</div>'  
                        }
                    },
                    {
                        "data": "fechaAutoevaluacion",
                        "name": "Fecha de Autoevaluación",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            if (data !== null) {
                                return '<div style="text-align: center;">' + moment(data).format('DD/MM/YYYY') + '</div>'                               
                            } else {
                                return '';
                            }
                        }
                    },
                    {
                        "data": "fechaEvaluacion",
                        "name": "Fecha de Evaluación",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            if (data !== null) {
                                return '<div style="text-align: center;">' + moment(data).format('DD/MM/YYYY') + '</div>'   
                            } else {
                                return '';
                            }
                        }
                    },
                    {
                        "data": "fechaCalibracion",
                        "name": "Fecha de Calibración",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            if (data !== null) {
                               return '<div style="text-align: center;">' + moment(data).format('DD/MM/YYYY') + '</div>'   
                            } else {
                                return '';
                            }
                        }
                    },
                    {
                        "data": "idEstado",
                        "name": "Estado",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            if (data == 1) {
                                return '<a href="/PerformanceApp/Index/Crud?view=autoevaluacion" class="btn btn-block btn-danger" title="A COMPLETAR" style="font-size: 100% !important;">' + row.estado + '</a>';
                            } else if (data == 2) {
                                return '<a href="" class="btn btn-sm btn-warning" title="A EVALUAR" style="font-size: 100% !important;">' + row.estado + '</a>';
                            }  else if (data == 3) {
                                return '<a href="" class="btn btn-sm btn-info" title="A CALIBRAR" style="font-size: 100% !important;">' + row.estado + '</a>';
                            }  else if (data == 4) {
                                return '<a href="" class="btn btn-sm btn-success" title="FINALIZADO" style="font-size: 100% !important;">' + row.estado + '</a>';
                            } 
                        }
                    },
                ],
                "createdRow": function (row, data, index) {

                },
                "ordering": true,
                "paging": true
            });
        };
        //INICIAR TABLA DEL LIDER
        function IniciarTablaLider() {
            var table = $('#tablaLider').DataTable();
            table.page('first').draw('page'); // Vuelve a la página 1 y actualiza la tabla
            table.clear().destroy();
        }
        function CargartablaLider(url) {
            moment.locale('es');
            var table = $("#tablaLider").DataTable({
                "processing": true,
                "serverSide": true,
                "stateSave": true,
                "bDestroy": true,
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                },
                "ajax": {
                    "url": url,
                    "type": "POST",
                    "data": function (d) {
                        return JSON.stringify(d);
                    },
                    "datatype": "json"
                },
                "pageLength": 25,
                "filter": true,
                "responsivePriority": 1,
                "columnDefs": [
                    { "width": "10%", "targets": 0 },
                    { "width": "20%", "targets": 1 },
                    { "width": "14%", "targets": 2 },
                    { "width": "14%", "targets": 3 },
                    { "width": "14%", "targets": 4 },
                    { "width": "14%", "targets": 5 },
                    { "width": "14%", "targets": 6 },
                ],
                "columns": [
                    {
                        "data": "ano",
                        "name": "ano",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<div class="d-flex px-2 py-1">' +
                                '<div class="d-flex flex-column justify-content-center">' +
                                '<h6 class="mb-0 text-sm">' + data + '</h6>' +
                                '</div>' +
                                '</div>';
                        }
                    },
                    {
                        "data": "nombre",
                        "name": "nombre",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<div class="d-flex px-2 py-1">' +
                                '<div class="d-flex flex-column justify-content-center">' +
                                '<h6 class="mb-0 text-sm">' + data + '</h6>' +
                                '</div>' +
                                '</div>';
                        }
                    },
                    {
                        "data": "fechaAutoevaluacion",
                        "name": "fechaAutoevaluacion",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },
                    {
                        "data": "fechaEvaluacion",
                        "name": "fechaEvaluacion",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },
                    {
                        "data": "fechaCalibracion",
                        "name": "fechaCalibracion",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },
                    {
                        "data": "estado",
                        "name": "estado",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            if (data == 1) {
                                return '<span class="badge badge-sm badge-success">Finalizado</span>';
                            }
                            else if (data == 2) {
                                return '<span class="badge badge-sm badge-danger">A realizar</span>';
                            }

                        }
                    },
                    {
                        "data": "acciones",
                        "name": "Acciones",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },

                ],
                "createdRow": function (row, data, index) {
                    // Aquí puedes aplicar estilos o clases a las filas según tus datos
                },
                "ordering": true,
                "paging": true
            });
        };

        //INICIAR TABLA RRHH
        function IniciarTablaRRHH() {
            var table = $('#tablaRRHH').DataTable();
            table.page('first').draw('page'); // Vuelve a la página 1 y actualiza la tabla
            table.clear().destroy();
        }
        function CargartablaRRHH(url) {
            moment.locale('es');
            var table = $("#tablaRRHH").DataTable({
                "processing": true,
                "serverSide": true,
                "stateSave": true,
                "bDestroy": true,
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                },
                "ajax": {
                    "url": url,
                    "type": "POST",
                    "data": function (d) {
                        return JSON.stringify(d);
                    },
                    "datatype": "json"
                },
                "pageLength": 25,
                "filter": true,
                "responsivePriority": 1,
                "columnDefs": [
                    { "width": "10%", "targets": 0 },
                    { "width": "20%", "targets": 1 },
                    { "width": "14%", "targets": 2 },
                    { "width": "14%", "targets": 3 },
                    { "width": "14%", "targets": 4 },
                    { "width": "14%", "targets": 5 },
                    { "width": "14%", "targets": 6 },
                ],
                "columns": [
                    {
                        "data": "ano",
                        "name": "Año",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<div class="d-flex px-2 py-1">' +
                                '<div class="d-flex flex-column justify-content-center">' +
                                '<h6 class="mb-0 text-sm">' + data + '</h6>' +
                                '</div>' +
                                '</div>';
                        }
                    },
                    {
                        "data": "nombreJefe",
                        "name": "Líder",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<div class="d-flex px-2 py-1">' +
                                '<div class="d-flex flex-column justify-content-center">' +
                                '<h6 class="mb-0 text-sm">' + data + '</h6>' +
                                '</div>' +
                                '</div>';
                        }
                    },
                    {
                        "data": "fechaAutoevaluacion",
                        "name": "Fecha de Autoevaluación",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },
                    {
                        "data": "fechaEvaluacion",
                        "name": "Fecha de Evaluación",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },
                    {
                        "data": "fechaCalibracion",
                        "name": "Fecha de Calibración",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },
                    {
                        "data": "estado",
                        "name": "Estado",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            if (data == 1) {
                                return '<span class="badge badge-sm badge-success">Finalizado</span>';
                            }
                            else if (data == 2) {
                                return '<span class="badge badge-sm badge-danger">A realizar</span>';
                            }

                        }
                    },
                    {
                        "data": "acciones",
                        "name": "Acciones",
                        "autoWidth": false,
                        "render": function (data, type, row, meta) {
                            return '<span class="text-secondary text-xs font-weight-bold">' + data + '</span>';
                        }
                    },

                ],
                "createdRow": function (row, data, index) {
                    // Aquí puedes aplicar estilos o clases a las filas según tus datos
                },
                "ordering": true,
                "paging": true
            });
        };

        CargarEstados();
        function CargarEstados() {
            var selecEstados = $('#selectEstado');
            selecEstados.empty();
            selecEstados.append($('<option/>', { value: '', text: 'Seleccionar' }).hide());
            var url = "Api/PerformanceApp/listarEstadosPerformance";
            $.getJSON(url)
                .done(function (data) {
                    console.log(data);
                    $.each(data, function (index, result) {
                        selecEstados.append($('<option/>', {
                            value: result.id,
                            text: result.estado
                        }));
                    });
                });
        }
    </script>

</body>
</html>
